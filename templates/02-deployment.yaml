apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "prometheus-exporter.fullname" . }}
  labels:
    {{- include "prometheus-exporter.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "prometheus-exporter.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- if .Values.configs }}
        configHash: {{ include (print $.Template.BasePath "/00-configmap.yaml") . | sha256sum | trunc 16 | quote }}
        {{- end }}
        {{- if .Values.secrets }}
        secretHash: {{ include (print $.Template.BasePath "/01-secret.yaml") . | sha256sum | trunc 16 | quote }}
        {{- end }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "prometheus-exporter.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "prometheus-exporter.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          args:
            - --web.listen-address=0.0.0.0:8080
            {{- if .Values.extraArgs }}
              {{- toYaml .Values.extraArgs | nindent 12 }}
            {{- end}}
          {{- if .Values.configs }}
          envFrom:
            - configMapRef:
                name: "{{ include "prometheus-exporter.fullname" . }}-env"
          {{- end }}
          {{- if .Values.secrets }}
          envFrom:
            - secretRef:
                name: "{{ include "prometheus-exporter.fullname" . }}-secret"
          {{- end }}
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            {{- toYaml .Values.livenessProbe | nindent 12 }}
          readinessProbe:
            {{- toYaml .Values.readinessProbe | nindent 12 }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            {{- toYaml .Values.volumeMounts | default "" | nindent 12 }} 
      volumes:
        {{- toYaml .Values.volumes | default "" | nindent 8 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
